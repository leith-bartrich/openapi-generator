/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreUObject.h"
#include "Json/Public/Json.h"
#include "Json/Public/Serialization/JsonWriter.h"
#include "OpenAPIModule.h"
#include "Helpers.h"
#include "Order.generated.h"


/*
* Order Model related types and methods.
*
* An order for a pets from the pet store
*/

// declare any enum types

/* Enum for values of OrderStatusEnum */
UENUM(BlueprintType)
enum class EOAPIOrderStatusEnum
{
    Placed,    Approved,    Delivered,
};

//utility functions for string conversion of OrderStatusEnum
static FString EnumToString(const EOAPIOrderStatusEnum& EnumValue);
static bool EnumFromString(const FString& EnumAsString, EOAPIOrderStatusEnum& EnumValue);



//Blueprint UObject for Order
UCLASS(BlueprintType)
class OPENAPI_API UOAPIOrder : public UOAPIModel
{

    GENERATED_BODY()

public:

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void WriteJson(JsonWriter& Writer) const override;


    TOptional<int64> Id;

    UFUNCTION(BlueprintCallable)
    const int64 GetId() const { return this->Id.GetValue(); };

    UFUNCTION(BlueprintCallable)
    void SetId(int64 In_Id) { this->Id = In_Id; };

    UFUNCTION(BlueprintCallable)
    bool IdIsSet() const {return this->Id.IsSet();};

    TOptional<int64> PetId;

    UFUNCTION(BlueprintCallable)
    const int64 GetPetId() const { return this->PetId.GetValue(); };

    UFUNCTION(BlueprintCallable)
    void SetPetId(int64 In_PetId) { this->PetId = In_PetId; };

    UFUNCTION(BlueprintCallable)
    bool PetIdIsSet() const {return this->PetId.IsSet();};

    TOptional<int32> Quantity;

    UFUNCTION(BlueprintCallable)
    const int32 GetQuantity() const { return this->Quantity.GetValue(); };

    UFUNCTION(BlueprintCallable)
    void SetQuantity(int32 In_Quantity) { this->Quantity = In_Quantity; };

    UFUNCTION(BlueprintCallable)
    bool QuantityIsSet() const {return this->Quantity.IsSet();};

    TOptional<FDateTime> ShipDate;

    UFUNCTION(BlueprintCallable)
    const FDateTime GetShipDate() const { return this->ShipDate.GetValue(); };

    UFUNCTION(BlueprintCallable)
    void SetShipDate(FDateTime In_ShipDate) { this->ShipDate = In_ShipDate; };

    UFUNCTION(BlueprintCallable)
    bool ShipDateIsSet() const {return this->ShipDate.IsSet();};
    /* Order Status */
    TOptional<EOAPIOrderStatusEnum> Status;

    UFUNCTION(BlueprintCallable)
    const EOAPIOrderStatusEnum GetStatus() { return this->Status.GetValue(); };

    UFUNCTION(BlueprintCallable)
    void SetStatus(EOAPIOrderStatusEnum In_Status) { this->Status = In_Status; };

    UFUNCTION(BlueprintCallable)
    bool StatusIsSet() const {return this->Status.IsSet();};

    TOptional<bool> Complete;

    UFUNCTION(BlueprintCallable)
    const bool GetComplete() const { return this->Complete.GetValue(); };

    UFUNCTION(BlueprintCallable)
    void SetComplete(bool In_Complete) { this->Complete = In_Complete; };

    UFUNCTION(BlueprintCallable)
    bool CompleteIsSet() const {return this->Complete.IsSet();};

private:

};



namespace openapi
{

    FString ToString(const UOAPIOrder& In_Order);
    void WriteJsonValue(JsonWriter& Writer, UOAPIOrder* Value);

}
