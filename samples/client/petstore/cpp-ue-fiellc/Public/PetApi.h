/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "CoreUObject.h"
#include "Interfaces/IHttpRequest.h"
#include "Interfaces/IHttpResponse.h"
#include "Serialization/JsonWriter.h"
#include "Serialization/JsonSerializer.h"
#include "Dom/JsonObject.h"
#include "OpenAPIModule.h"
#include "Helpers.h"
#include "PetApi.generated.h"

//forward delcarations
class UOAPIAddPetRequest;
class UOAPIDeletePetRequest;
class UOAPIFindPetsByStatusRequest;
class UOAPIFindPetsByTagsRequest;
class UOAPIGetPetByIdRequest;
class UOAPIUpdatePetRequest;
class UOAPIUpdatePetWithFormRequest;
class UOAPIUploadFileRequest;

class UOAPIAddPetResponse;
class UOAPIDeletePetResponse;
class UOAPIFindPetsByStatusResponse;
class UOAPIFindPetsByTagsResponse;
class UOAPIGetPetByIdResponse;
class UOAPIUpdatePetResponse;
class UOAPIUpdatePetWithFormResponse;
class UOAPIUploadFileResponse;

class UOAPIApiResponse;
class UOAPIHttpFileInput;
class UOAPIPet;
class UOAPIRequest;


//cancellable request handle
UCLASS(BlueprintType)
class OPENAPI_API UOAPIActiveRequestHandle : public UObject
{
    GENERATED_BODY()
public:
    UPROPERTY()
    UOAPIRequest * Request;

    FHttpRequestPtr HttpRequest;

    UFUNCTION(BlueprintCallable)
    void DoCancelRequest() { HttpRequest->CancelRequest(); };
};

//http helpers

class OPENAPI_API HttpFileInput
{
public:
	explicit HttpFileInput(const TCHAR* InFilePath);
	explicit HttpFileInput(const FString& InFilePath);

	// This will automatically set the content type if not already set
    void SetFilePath(const TCHAR* InFilePath);
	void SetFilePath(const FString& InFilePath);

    // Optional if it can be deduced from the FilePath
    void SetContentType(const TCHAR* ContentType);

	HttpFileInput& operator=(const HttpFileInput& Other) = default;
	HttpFileInput& operator=(const FString& InFilePath) { SetFilePath(*InFilePath); return*this; }
	HttpFileInput& operator=(const TCHAR* InFilePath) { SetFilePath(InFilePath); return*this; }

	const FString& GetFilePath() const { return FilePath; }
	const FString& GetContentType() const { return ContentType; }

	// Returns the filename with extension
	FString GetFilename() const;

private:
    FString FilePath;
    FString ContentType;
};

class HttpMultipartFormData
{
public:
    void SetBoundary(const TCHAR* InBoundary);
    void SetupHttpRequest(const FHttpRequestRef& HttpRequest);

    void AddStringPart(const TCHAR* Name, const TCHAR* Data);
    void AddJsonPart(const TCHAR* Name, const FString& JsonString);
    void AddBinaryPart(const TCHAR* Name, const TArray<uint8>& ByteArray);
    void AddFilePart(const TCHAR* Name, const HttpFileInput& File);

private:
    void AppendString(const TCHAR* Str);
    const FString& GetBoundary() const;

    mutable FString Boundary;
    TArray<uint8> FormData;

    static const TCHAR* Delimiter;
    static const TCHAR* Newline;
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIPetApi : public UObject
{
    GENERATED_BODY()
public:

    //Sets the base URL for Endpoints.
    UFUNCTION(BlueprintCallable)
    void SetURL(const FString& Url);

    //Adds global header params to all requests made from this PetApi instance.
    UFUNCTION(BlueprintCallable)
    void AddHeaderParam(const FString& Key, const FString& Value);

    UFUNCTION(BlueprintCallable)
    void ClearHeaderParams();

    /* Requests */

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIAddPetResponseDelegate,UOAPIAddPetResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoAddPetRequest(UOAPIAddPetRequest* In_Request, const FOnOAPIAddPetResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoAddPetRequestStatic(UOAPIAddPetRequest* In_Request, TFunction<void(UOAPIAddPetResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIDeletePetResponseDelegate,UOAPIDeletePetResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoDeletePetRequest(UOAPIDeletePetRequest* In_Request, const FOnOAPIDeletePetResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoDeletePetRequestStatic(UOAPIDeletePetRequest* In_Request, TFunction<void(UOAPIDeletePetResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIFindPetsByStatusResponseDelegate,UOAPIFindPetsByStatusResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoFindPetsByStatusRequest(UOAPIFindPetsByStatusRequest* In_Request, const FOnOAPIFindPetsByStatusResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoFindPetsByStatusRequestStatic(UOAPIFindPetsByStatusRequest* In_Request, TFunction<void(UOAPIFindPetsByStatusResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIFindPetsByTagsResponseDelegate,UOAPIFindPetsByTagsResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoFindPetsByTagsRequest(UOAPIFindPetsByTagsRequest* In_Request, const FOnOAPIFindPetsByTagsResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoFindPetsByTagsRequestStatic(UOAPIFindPetsByTagsRequest* In_Request, TFunction<void(UOAPIFindPetsByTagsResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIGetPetByIdResponseDelegate,UOAPIGetPetByIdResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoGetPetByIdRequest(UOAPIGetPetByIdRequest* In_Request, const FOnOAPIGetPetByIdResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoGetPetByIdRequestStatic(UOAPIGetPetByIdRequest* In_Request, TFunction<void(UOAPIGetPetByIdResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIUpdatePetResponseDelegate,UOAPIUpdatePetResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoUpdatePetRequest(UOAPIUpdatePetRequest* In_Request, const FOnOAPIUpdatePetResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoUpdatePetRequestStatic(UOAPIUpdatePetRequest* In_Request, TFunction<void(UOAPIUpdatePetResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIUpdatePetWithFormResponseDelegate,UOAPIUpdatePetWithFormResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoUpdatePetWithFormRequest(UOAPIUpdatePetWithFormRequest* In_Request, const FOnOAPIUpdatePetWithFormResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoUpdatePetWithFormRequestStatic(UOAPIUpdatePetWithFormRequest* In_Request, TFunction<void(UOAPIUpdatePetWithFormResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIUploadFileResponseDelegate,UOAPIUploadFileResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoUploadFileRequest(UOAPIUploadFileRequest* In_Request, const FOnOAPIUploadFileResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoUploadFileRequestStatic(UOAPIUploadFileRequest* In_Request, TFunction<void(UOAPIUploadFileResponse*)> on_response);

    

private:
    UPROPERTY()
    FString Url;

    UPROPERTY()
    TMap<FString,FString> AdditionalHeaderParams;

    UPROPERTY()
    TArray<UOAPIRequest*> Processing_Requests;
};

UCLASS(BlueprintType, Abstract)
class OPENAPI_API UOAPIRequest : public UObject
{
    GENERATED_BODY()
};



/*
 * Operation AddPet
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIAddPetRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIPetApi * in_api, TFunction<void(UOAPIAddPetResponse*)> on_response ) { return in_api->DoAddPetRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;


    /* Pet object that needs to be added to the store */
    UOAPIPet* Body;
    UFUNCTION(BlueprintCallable)
    void SetBody(UOAPIPet* In_Body) { this->Body = In_Body; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIAddPetResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIAddPetRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);




};


/*
 * Operation DeletePet
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIDeletePetRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIPetApi * in_api, TFunction<void(UOAPIDeletePetResponse*)> on_response ) { return in_api->DoDeletePetRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;



    /* Pet id to delete */
    int64 PetId = 0;
    UFUNCTION(BlueprintCallable)
    void SetPetId(int64 In_PetId) { this->PetId = In_PetId; };


    TOptional<FString> ApiKey;
    UFUNCTION(BlueprintCallable)
    void SetApiKey(FString In_ApiKey) { this->ApiKey = In_ApiKey; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIDeletePetResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIDeletePetRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);




};


/*
 * Operation FindPetsByStatus
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIFindPetsByStatusRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIPetApi * in_api, TFunction<void(UOAPIFindPetsByStatusResponse*)> on_response ) { return in_api->DoFindPetsByStatusRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;


	enum class StatusEnum
	{
		Available,
		Pending,
		Sold,
  	};

    UFUNCTION()
	static FString EnumToString(const StatusEnum& EnumValue);
    UFUNCTION()
	static bool EnumFromString(const FString& EnumAsString, StatusEnum& EnumValue);
    /* Status values that need to be considered for filter */
    TArray<StatusEnum> Status;
    UFUNCTION(BlueprintCallable)
    void SetStatus(TArray<StatusEnum> In_Status) { this->Status = In_Status; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIFindPetsByStatusResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIFindPetsByStatusRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);



        
        UPROPERTY()
        TArray<UOAPIPet*> Content;
                    


};


/*
 * Operation FindPetsByTags
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIFindPetsByTagsRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIPetApi * in_api, TFunction<void(UOAPIFindPetsByTagsResponse*)> on_response ) { return in_api->DoFindPetsByTagsRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;



    /* Tags to filter by */
    TArray<FString> Tags;
    UFUNCTION(BlueprintCallable)
    void SetTags(TArray<FString> In_Tags) { this->Tags = In_Tags; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIFindPetsByTagsResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIFindPetsByTagsRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);



        
        UPROPERTY()
        TArray<UOAPIPet*> Content;
                    


};


/*
 * Operation GetPetById
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIGetPetByIdRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIPetApi * in_api, TFunction<void(UOAPIGetPetByIdResponse*)> on_response ) { return in_api->DoGetPetByIdRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;



    /* ID of pet to return */
    int64 PetId = 0;
    UFUNCTION(BlueprintCallable)
    void SetPetId(int64 In_PetId) { this->PetId = In_PetId; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIGetPetByIdResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIGetPetByIdRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);


        UPROPERTY()
        UOAPIPet* Content;
    


};


/*
 * Operation UpdatePet
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIUpdatePetRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIPetApi * in_api, TFunction<void(UOAPIUpdatePetResponse*)> on_response ) { return in_api->DoUpdatePetRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;


    /* Pet object that needs to be added to the store */
    UOAPIPet* Body;
    UFUNCTION(BlueprintCallable)
    void SetBody(UOAPIPet* In_Body) { this->Body = In_Body; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIUpdatePetResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIUpdatePetRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);




};


/*
 * Operation UpdatePetWithForm
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIUpdatePetWithFormRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIPetApi * in_api, TFunction<void(UOAPIUpdatePetWithFormResponse*)> on_response ) { return in_api->DoUpdatePetWithFormRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;



    /* ID of pet that needs to be updated */
    int64 PetId = 0;
    UFUNCTION(BlueprintCallable)
    void SetPetId(int64 In_PetId) { this->PetId = In_PetId; };


    /* Updated name of the pet */
    TOptional<FString> Name;
    UFUNCTION(BlueprintCallable)
    void SetName(FString In_Name) { this->Name = In_Name; };


    /* Updated status of the pet */
    TOptional<FString> Status;
    UFUNCTION(BlueprintCallable)
    void SetStatus(FString In_Status) { this->Status = In_Status; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIUpdatePetWithFormResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIUpdatePetWithFormRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);




};


/*
 * Operation UploadFile
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIUploadFileRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIPetApi * in_api, TFunction<void(UOAPIUploadFileResponse*)> on_response ) { return in_api->DoUploadFileRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;



    /* ID of pet to update */
    int64 PetId = 0;
    UFUNCTION(BlueprintCallable)
    void SetPetId(int64 In_PetId) { this->PetId = In_PetId; };


    /* Additional data to pass to server */
    TOptional<FString> AdditionalMetadata;
    UFUNCTION(BlueprintCallable)
    void SetAdditionalMetadata(FString In_AdditionalMetadata) { this->AdditionalMetadata = In_AdditionalMetadata; };


    /* file to upload */
    TOptional<HttpFileInput> File;
    UFUNCTION(BlueprintCallable)
    void SetFile(HttpFileInput In_File) { this->File = In_File; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIUploadFileResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIUploadFileRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);


        UPROPERTY()
        UOAPIApiResponse* Content;
    


};


