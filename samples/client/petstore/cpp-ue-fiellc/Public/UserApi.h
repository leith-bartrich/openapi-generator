/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "CoreUObject.h"
#include "Interfaces/IHttpRequest.h"
#include "Interfaces/IHttpResponse.h"
#include "Serialization/JsonWriter.h"
#include "Serialization/JsonSerializer.h"
#include "Dom/JsonObject.h"
#include "OpenAPIModule.h"
#include "Helpers.h"
#include "UserApi.generated.h"

//forward delcarations
class UOAPICreateUserRequest;
class UOAPICreateUsersWithArrayInputRequest;
class UOAPICreateUsersWithListInputRequest;
class UOAPIDeleteUserRequest;
class UOAPIGetUserByNameRequest;
class UOAPILoginUserRequest;
class UOAPILogoutUserRequest;
class UOAPIUpdateUserRequest;

class UOAPICreateUserResponse;
class UOAPICreateUsersWithArrayInputResponse;
class UOAPICreateUsersWithListInputResponse;
class UOAPIDeleteUserResponse;
class UOAPIGetUserByNameResponse;
class UOAPILoginUserResponse;
class UOAPILogoutUserResponse;
class UOAPIUpdateUserResponse;

class UOAPIUser;
class UOAPIRequest;


//cancellable request handle
UCLASS(BlueprintType)
class OPENAPI_API UOAPIActiveRequestHandle : public UObject
{
    GENERATED_BODY()
public:
    UPROPERTY()
    UOAPIRequest * Request;

    FHttpRequestPtr HttpRequest;

    UFUNCTION(BlueprintCallable)
    void DoCancelRequest() { HttpRequest->CancelRequest(); };
};

//http helpers

class OPENAPI_API HttpFileInput
{
public:
	explicit HttpFileInput(const TCHAR* InFilePath);
	explicit HttpFileInput(const FString& InFilePath);

	// This will automatically set the content type if not already set
    void SetFilePath(const TCHAR* InFilePath);
	void SetFilePath(const FString& InFilePath);

    // Optional if it can be deduced from the FilePath
    void SetContentType(const TCHAR* ContentType);

	HttpFileInput& operator=(const HttpFileInput& Other) = default;
	HttpFileInput& operator=(const FString& InFilePath) { SetFilePath(*InFilePath); return*this; }
	HttpFileInput& operator=(const TCHAR* InFilePath) { SetFilePath(InFilePath); return*this; }

	const FString& GetFilePath() const { return FilePath; }
	const FString& GetContentType() const { return ContentType; }

	// Returns the filename with extension
	FString GetFilename() const;

private:
    FString FilePath;
    FString ContentType;
};

class HttpMultipartFormData
{
public:
    void SetBoundary(const TCHAR* InBoundary);
    void SetupHttpRequest(const FHttpRequestRef& HttpRequest);

    void AddStringPart(const TCHAR* Name, const TCHAR* Data);
    void AddJsonPart(const TCHAR* Name, const FString& JsonString);
    void AddBinaryPart(const TCHAR* Name, const TArray<uint8>& ByteArray);
    void AddFilePart(const TCHAR* Name, const HttpFileInput& File);

private:
    void AppendString(const TCHAR* Str);
    const FString& GetBoundary() const;

    mutable FString Boundary;
    TArray<uint8> FormData;

    static const TCHAR* Delimiter;
    static const TCHAR* Newline;
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIUserApi : public UObject
{
    GENERATED_BODY()
public:

    //Sets the base URL for Endpoints.
    UFUNCTION(BlueprintCallable)
    void SetURL(const FString& Url);

    //Adds global header params to all requests made from this UserApi instance.
    UFUNCTION(BlueprintCallable)
    void AddHeaderParam(const FString& Key, const FString& Value);

    UFUNCTION(BlueprintCallable)
    void ClearHeaderParams();

    /* Requests */

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPICreateUserResponseDelegate,UOAPICreateUserResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoCreateUserRequest(UOAPICreateUserRequest* In_Request, const FOnOAPICreateUserResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoCreateUserRequestStatic(UOAPICreateUserRequest* In_Request, TFunction<void(UOAPICreateUserResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPICreateUsersWithArrayInputResponseDelegate,UOAPICreateUsersWithArrayInputResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoCreateUsersWithArrayInputRequest(UOAPICreateUsersWithArrayInputRequest* In_Request, const FOnOAPICreateUsersWithArrayInputResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoCreateUsersWithArrayInputRequestStatic(UOAPICreateUsersWithArrayInputRequest* In_Request, TFunction<void(UOAPICreateUsersWithArrayInputResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPICreateUsersWithListInputResponseDelegate,UOAPICreateUsersWithListInputResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoCreateUsersWithListInputRequest(UOAPICreateUsersWithListInputRequest* In_Request, const FOnOAPICreateUsersWithListInputResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoCreateUsersWithListInputRequestStatic(UOAPICreateUsersWithListInputRequest* In_Request, TFunction<void(UOAPICreateUsersWithListInputResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIDeleteUserResponseDelegate,UOAPIDeleteUserResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoDeleteUserRequest(UOAPIDeleteUserRequest* In_Request, const FOnOAPIDeleteUserResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoDeleteUserRequestStatic(UOAPIDeleteUserRequest* In_Request, TFunction<void(UOAPIDeleteUserResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIGetUserByNameResponseDelegate,UOAPIGetUserByNameResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoGetUserByNameRequest(UOAPIGetUserByNameRequest* In_Request, const FOnOAPIGetUserByNameResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoGetUserByNameRequestStatic(UOAPIGetUserByNameRequest* In_Request, TFunction<void(UOAPIGetUserByNameResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPILoginUserResponseDelegate,UOAPILoginUserResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoLoginUserRequest(UOAPILoginUserRequest* In_Request, const FOnOAPILoginUserResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoLoginUserRequestStatic(UOAPILoginUserRequest* In_Request, TFunction<void(UOAPILoginUserResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPILogoutUserResponseDelegate,UOAPILogoutUserResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoLogoutUserRequest(UOAPILogoutUserRequest* In_Request, const FOnOAPILogoutUserResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoLogoutUserRequestStatic(UOAPILogoutUserRequest* In_Request, TFunction<void(UOAPILogoutUserResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIUpdateUserResponseDelegate,UOAPIUpdateUserResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoUpdateUserRequest(UOAPIUpdateUserRequest* In_Request, const FOnOAPIUpdateUserResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoUpdateUserRequestStatic(UOAPIUpdateUserRequest* In_Request, TFunction<void(UOAPIUpdateUserResponse*)> on_response);

    

private:
    UPROPERTY()
    FString Url;

    UPROPERTY()
    TMap<FString,FString> AdditionalHeaderParams;

    UPROPERTY()
    TArray<UOAPIRequest*> Processing_Requests;
};

UCLASS(BlueprintType, Abstract)
class OPENAPI_API UOAPIRequest : public UObject
{
    GENERATED_BODY()
};



/*
 * Operation CreateUser
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPICreateUserRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIUserApi * in_api, TFunction<void(UOAPICreateUserResponse*)> on_response ) { return in_api->DoCreateUserRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;


    /* Created user object */
    UOAPIUser* Body;
    UFUNCTION(BlueprintCallable)
    void SetBody(UOAPIUser* In_Body) { this->Body = In_Body; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPICreateUserResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPICreateUserRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);




};


/*
 * Operation CreateUsersWithArrayInput
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPICreateUsersWithArrayInputRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIUserApi * in_api, TFunction<void(UOAPICreateUsersWithArrayInputResponse*)> on_response ) { return in_api->DoCreateUsersWithArrayInputRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;



    /* List of user object */
    TArray<User> Body;
    UFUNCTION(BlueprintCallable)
    void SetBody(TArray<User> In_Body) { this->Body = In_Body; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPICreateUsersWithArrayInputResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPICreateUsersWithArrayInputRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);




};


/*
 * Operation CreateUsersWithListInput
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPICreateUsersWithListInputRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIUserApi * in_api, TFunction<void(UOAPICreateUsersWithListInputResponse*)> on_response ) { return in_api->DoCreateUsersWithListInputRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;



    /* List of user object */
    TArray<User> Body;
    UFUNCTION(BlueprintCallable)
    void SetBody(TArray<User> In_Body) { this->Body = In_Body; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPICreateUsersWithListInputResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPICreateUsersWithListInputRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);




};


/*
 * Operation DeleteUser
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIDeleteUserRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIUserApi * in_api, TFunction<void(UOAPIDeleteUserResponse*)> on_response ) { return in_api->DoDeleteUserRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;



    /* The name that needs to be deleted */
    FString Username;
    UFUNCTION(BlueprintCallable)
    void SetUsername(FString In_Username) { this->Username = In_Username; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIDeleteUserResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIDeleteUserRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);




};


/*
 * Operation GetUserByName
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIGetUserByNameRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIUserApi * in_api, TFunction<void(UOAPIGetUserByNameResponse*)> on_response ) { return in_api->DoGetUserByNameRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;



    /* The name that needs to be fetched. Use user1 for testing. */
    FString Username;
    UFUNCTION(BlueprintCallable)
    void SetUsername(FString In_Username) { this->Username = In_Username; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIGetUserByNameResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIGetUserByNameRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);


        UPROPERTY()
        UOAPIUser* Content;
    


};


/*
 * Operation LoginUser
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPILoginUserRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIUserApi * in_api, TFunction<void(UOAPILoginUserResponse*)> on_response ) { return in_api->DoLoginUserRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;



    /* The user name for login */
    FString Username;
    UFUNCTION(BlueprintCallable)
    void SetUsername(FString In_Username) { this->Username = In_Username; };


    /* The password for login in clear text */
    FString Password;
    UFUNCTION(BlueprintCallable)
    void SetPassword(FString In_Password) { this->Password = In_Password; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPILoginUserResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPILoginUserRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);



        
        UPROPERTY()
        FString Content;



};


/*
 * Operation LogoutUser
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPILogoutUserRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIUserApi * in_api, TFunction<void(UOAPILogoutUserResponse*)> on_response ) { return in_api->DoLogoutUserRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;

};


UCLASS(BlueprintType)
class OPENAPI_API UOAPILogoutUserResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPILogoutUserRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);




};


/*
 * Operation UpdateUser
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIUpdateUserRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIUserApi * in_api, TFunction<void(UOAPIUpdateUserResponse*)> on_response ) { return in_api->DoUpdateUserRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;



    /* name that need to be deleted */
    FString Username;
    UFUNCTION(BlueprintCallable)
    void SetUsername(FString In_Username) { this->Username = In_Username; };

    /* Updated user object */
    UOAPIUser* Body;
    UFUNCTION(BlueprintCallable)
    void SetBody(UOAPIUser* In_Body) { this->Body = In_Body; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIUpdateUserResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIUpdateUserRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);




};


