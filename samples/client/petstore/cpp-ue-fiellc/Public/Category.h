/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreUObject.h"
#include "Json/Public/Json.h"
#include "Json/Public/Serialization/JsonWriter.h"
#include "OpenAPIModule.h"
#include "Helpers.h"
#include "Category.generated.h"


/*
* Category Model related types and methods.
*
* A category for a pet
*/

// declare any enum types



//Blueprint UObject for Category
UCLASS(BlueprintType)
class OPENAPI_API UOAPICategory : public UOAPIModel
{

    GENERATED_BODY()

public:

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) override;
    void WriteJson(JsonWriter& Writer) const override;


    TOptional<int64> Id;

    UFUNCTION(BlueprintCallable)
    const int64 GetId() const { return this->Id.GetValue(); };

    UFUNCTION(BlueprintCallable)
    void SetId(int64 In_Id) { this->Id = In_Id; };

    UFUNCTION(BlueprintCallable)
    bool IdIsSet() const {return this->Id.IsSet();};

    TOptional<FString> Name;

    UFUNCTION(BlueprintCallable)
    const FString GetName() const { return this->Name.GetValue(); };

    UFUNCTION(BlueprintCallable)
    void SetName(FString In_Name) { this->Name = In_Name; };

    UFUNCTION(BlueprintCallable)
    bool NameIsSet() const {return this->Name.IsSet();};

private:

};



namespace openapi
{

    FString ToString(const UOAPICategory& In_Category);
    void WriteJsonValue(JsonWriter& Writer, UOAPICategory* Value);

}
