/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "CoreUObject.h"
#include "Interfaces/IHttpRequest.h"
#include "Interfaces/IHttpResponse.h"
#include "Serialization/JsonWriter.h"
#include "Serialization/JsonSerializer.h"
#include "Dom/JsonObject.h"
#include "OpenAPIModule.h"
#include "Helpers.h"
#include "StoreApi.generated.h"

//forward delcarations
class UOAPIDeleteOrderRequest;
class UOAPIGetInventoryRequest;
class UOAPIGetOrderByIdRequest;
class UOAPIPlaceOrderRequest;

class UOAPIDeleteOrderResponse;
class UOAPIGetInventoryResponse;
class UOAPIGetOrderByIdResponse;
class UOAPIPlaceOrderResponse;

class UOAPIOrder;
class UOAPIRequest;


//cancellable request handle
UCLASS(BlueprintType)
class OPENAPI_API UOAPIActiveRequestHandle : public UObject
{
    GENERATED_BODY()
public:
    UPROPERTY()
    UOAPIRequest * Request;

    FHttpRequestPtr HttpRequest;

    UFUNCTION(BlueprintCallable)
    void DoCancelRequest() { HttpRequest->CancelRequest(); };
};

//http helpers

class OPENAPI_API HttpFileInput
{
public:
	explicit HttpFileInput(const TCHAR* InFilePath);
	explicit HttpFileInput(const FString& InFilePath);

	// This will automatically set the content type if not already set
    void SetFilePath(const TCHAR* InFilePath);
	void SetFilePath(const FString& InFilePath);

    // Optional if it can be deduced from the FilePath
    void SetContentType(const TCHAR* ContentType);

	HttpFileInput& operator=(const HttpFileInput& Other) = default;
	HttpFileInput& operator=(const FString& InFilePath) { SetFilePath(*InFilePath); return*this; }
	HttpFileInput& operator=(const TCHAR* InFilePath) { SetFilePath(InFilePath); return*this; }

	const FString& GetFilePath() const { return FilePath; }
	const FString& GetContentType() const { return ContentType; }

	// Returns the filename with extension
	FString GetFilename() const;

private:
    FString FilePath;
    FString ContentType;
};

class HttpMultipartFormData
{
public:
    void SetBoundary(const TCHAR* InBoundary);
    void SetupHttpRequest(const FHttpRequestRef& HttpRequest);

    void AddStringPart(const TCHAR* Name, const TCHAR* Data);
    void AddJsonPart(const TCHAR* Name, const FString& JsonString);
    void AddBinaryPart(const TCHAR* Name, const TArray<uint8>& ByteArray);
    void AddFilePart(const TCHAR* Name, const HttpFileInput& File);

private:
    void AppendString(const TCHAR* Str);
    const FString& GetBoundary() const;

    mutable FString Boundary;
    TArray<uint8> FormData;

    static const TCHAR* Delimiter;
    static const TCHAR* Newline;
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIStoreApi : public UObject
{
    GENERATED_BODY()
public:

    //Sets the base URL for Endpoints.
    UFUNCTION(BlueprintCallable)
    void SetURL(const FString& Url);

    //Adds global header params to all requests made from this StoreApi instance.
    UFUNCTION(BlueprintCallable)
    void AddHeaderParam(const FString& Key, const FString& Value);

    UFUNCTION(BlueprintCallable)
    void ClearHeaderParams();

    /* Requests */

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIDeleteOrderResponseDelegate,UOAPIDeleteOrderResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoDeleteOrderRequest(UOAPIDeleteOrderRequest* In_Request, const FOnOAPIDeleteOrderResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoDeleteOrderRequestStatic(UOAPIDeleteOrderRequest* In_Request, TFunction<void(UOAPIDeleteOrderResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIGetInventoryResponseDelegate,UOAPIGetInventoryResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoGetInventoryRequest(UOAPIGetInventoryRequest* In_Request, const FOnOAPIGetInventoryResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoGetInventoryRequestStatic(UOAPIGetInventoryRequest* In_Request, TFunction<void(UOAPIGetInventoryResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIGetOrderByIdResponseDelegate,UOAPIGetOrderByIdResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoGetOrderByIdRequest(UOAPIGetOrderByIdRequest* In_Request, const FOnOAPIGetOrderByIdResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoGetOrderByIdRequestStatic(UOAPIGetOrderByIdRequest* In_Request, TFunction<void(UOAPIGetOrderByIdResponse*)> on_response);

    

    DECLARE_DYNAMIC_DELEGATE_OneParam(FOnOAPIPlaceOrderResponseDelegate,UOAPIPlaceOrderResponse*,In_Response);

    UFUNCTION(BlueprintCallable)
    UOAPIActiveRequestHandle* DoPlaceOrderRequest(UOAPIPlaceOrderRequest* In_Request, const FOnOAPIPlaceOrderResponseDelegate& on_response);

    UOAPIActiveRequestHandle* DoPlaceOrderRequestStatic(UOAPIPlaceOrderRequest* In_Request, TFunction<void(UOAPIPlaceOrderResponse*)> on_response);

    

private:
    UPROPERTY()
    FString Url;

    UPROPERTY()
    TMap<FString,FString> AdditionalHeaderParams;

    UPROPERTY()
    TArray<UOAPIRequest*> Processing_Requests;
};

UCLASS(BlueprintType, Abstract)
class OPENAPI_API UOAPIRequest : public UObject
{
    GENERATED_BODY()
};



/*
 * Operation DeleteOrder
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIDeleteOrderRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIStoreApi * in_api, TFunction<void(UOAPIDeleteOrderResponse*)> on_response ) { return in_api->DoDeleteOrderRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;



    /* ID of the order that needs to be deleted */
    FString OrderId;
    UFUNCTION(BlueprintCallable)
    void SetOrderId(FString In_OrderId) { this->OrderId = In_OrderId; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIDeleteOrderResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIDeleteOrderRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);




};


/*
 * Operation GetInventory
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIGetInventoryRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIStoreApi * in_api, TFunction<void(UOAPIGetInventoryResponse*)> on_response ) { return in_api->DoGetInventoryRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;

};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIGetInventoryResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIGetInventoryRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);



        
        UPROPERTY()
        TMap&lt;FString, int32&gt; Content;



};


/*
 * Operation GetOrderById
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIGetOrderByIdRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIStoreApi * in_api, TFunction<void(UOAPIGetOrderByIdResponse*)> on_response ) { return in_api->DoGetOrderByIdRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;



    /* ID of pet that needs to be fetched */
    int64 OrderId = 0;
    UFUNCTION(BlueprintCallable)
    void SetOrderId(int64 In_OrderId) { this->OrderId = In_OrderId; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIGetOrderByIdResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIGetOrderByIdRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);


        UPROPERTY()
        UOAPIOrder* Content;
    


};


/*
 * Operation PlaceOrder
 */

UCLASS(BlueprintType)
class OPENAPI_API UOAPIPlaceOrderRequest : public UOAPIRequest
{

    GENERATED_BODY()

public:

    UOAPIActiveRequestHandle* DoExecuteStatic(UOAPIStoreApi * in_api, TFunction<void(UOAPIPlaceOrderResponse*)> on_response ) { return in_api->DoPlaceOrderRequestStatic(this, on_response); };

    void SetupHttpRequest(const FHttpRequestRef& In_HttpRequest) const;

    FString ComputePath() const;

    FHttpRequestPtr HttpRequest;


    /* order placed for purchasing the pet */
    UOAPIOrder* Body;
    UFUNCTION(BlueprintCallable)
    void SetBody(UOAPIOrder* In_Body) { this->Body = In_Body; };
};


UCLASS(BlueprintType)
class OPENAPI_API UOAPIPlaceOrderResponse : public UObject
{

GENERATED_BODY()

public:

    UPROPERTY()
    bool HttpRequestFailed = false;

    UPROPERTY()
    bool HttpConnectionFailed = false;

    UPROPERTY()
    bool RestSuccess = false;

    UPROPERTY()
    int32 HttpResponseCode = 0;

    TOptional<FString> RestResponseDescription;
    UFUNCTION(BlueprintCallable)
    bool RestResponseDescriptionIsSet() { return RestResponseDescription.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseDescription() { return RestResponseDescription.GetValue(); };

    TOptional<FString> HttpContentType;
    UFUNCTION(BlueprintCallable)
    bool HttpContentTypeIsSet() { return HttpContentType.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetHttpContentType() { return HttpContentType.GetValue(); };

    TOptional<FString> RestResponseContentString;
    UFUNCTION(BlueprintCallable)
    bool RestResponseContentStringIsSet() { return RestResponseContentString.IsSet(); };
    UFUNCTION(BlueprintCallable)
    FString& GetRestResponseContentString() { return RestResponseContentString.GetValue(); };

    UPROPERTY()
    bool RestParseSuccessful = false;

    UPROPERTY()
    UOAPIPlaceOrderRequest* Request;

    bool FromJson(const TSharedPtr<FJsonValue>& JsonValue);


        UPROPERTY()
        UOAPIOrder* Content;
    


};


